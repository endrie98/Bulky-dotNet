@model ProductVM

<div class="card shadow border-0 mt-4 mb-5">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">@(Model.Product.Id != 0 ? "Update" : "Create")Product</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <form id="productForm" method="post" class="row" enctype="multipart/form-data">
            <input asp-for="Product.Id" hidden />
            <input asp-for="Product.ImageUrl" hidden />
            <div class="row">
                <div class="col-10">
                    <div class="border p-3">
                        <div class="text-danger" asp-validation-summary="ModelOnly"></div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.Title" class="form-control border-0 shadow" />
                            <label asp-for="Product.Title" class="ms-2"></label>
                            <span asp-validation-for="Product.Title" class="text-danger"></span>
                        </div>
                        <div class="py-2 col-12">
                            <label asp-for="Product.Description" class="ms-2 text-muted"></label>
                            <textarea asp-for="Product.Description" name="Product.Description" class="form-control border-0 shadow"></textarea>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.ISBN" class="form-control border-0 shadow" />
                            <label asp-for="Product.ISBN" class="ms-2"></label>
                            <span asp-validation-for="Product.ISBN" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.Author" class="form-control border-0 shadow" />
                            <label asp-for="Product.Author" class="ms-2"></label>
                            <span asp-validation-for="Product.Author" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.ListPrice" class="form-control border-0 shadow" />
                            <label asp-for="Product.ListPrice" class="ms-2"></label>
                            <span asp-validation-for="Product.ListPrice" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.Price" class="form-control border-0 shadow" />
                            <label asp-for="Product.Price" class="ms-2"></label>
                            <span asp-validation-for="Product.Price" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.Price50" class="form-control border-0 shadow" />
                            <label asp-for="Product.Price50" class="ms-2"></label>
                            <span asp-validation-for="Product.Price50" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="Product.Price100" class="form-control border-0 shadow" />
                            <label asp-for="Product.Price100" class="ms-2"></label>
                            <span asp-validation-for="Product.Price100" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <select asp-for="Product.CategoryId" asp-items="@Model.CategoryList" class="form-select border-0 shadow">
                                <option disabled selected>--Select Category--</option>
                            </select>
                            <label asp-for="Product.CategoryId" class="ms-2"></label>
                            <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input type="file" name="file" class="form-control border-0 shadow" />
                            <label asp-for="Product.ImageUrl" class="ms-2"></label>
                        </div>
                        <div class="row pt-2">
                            <div class="col-6 col-md-3">
                                @if (Model.Product.Id != 0)
                                {
                                    <button type="submit" class="btn btn-primary form-control">Update</button>
                                }
                                else
                                {
                                    <button type="submit" class="btn btn-primary form-control">Create</button>
                                }
                            </div>
                            <div class="col-6 col-md-3">
                                <a asp-controller="Product" asp-action="Index" class="btn btn-outline-primary border form-control">Back To List</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-2">
                    <img src="@Model.Product.ImageUrl" width="100%" style="border-radius: 5px; border: 1px solid #bbb9b9" />
                </div>
            </div>
        </form>
    </div>
</div>



@section Scripts{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            document.getElementById('productForm').addEventListener('submit', function (event) {
                /* event.preventDefault(); */ // Prevent default form submission

                // Retrieve form data
                const formData = new FormData(this);

                // Convert form data to object
                const formObject = {};
                formData.forEach((value, key) => {
                    formObject[key] = value;
                });

                const descriptionContent = tinymce.get('Product_Description').getContent();
                const strippedContent = descriptionContent.replace(/<\/?p>/g, ''); // Remove <p> tags
                formObject['Product.Description'] = strippedContent;
                console.log(strippedContent);

                // Log form data to console
                console.log('Form Data:', formObject);

                // Now you can proceed with your custom logic like AJAX submission or further processing.
            });
        });
        tinymce.init({
            selector: 'textarea',
            menubar: false,
            height: 200,
            plugins: 'anchor autolink charmap codesample emoticons lists table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed linkchecker a11ychecker tinymcespellchecker permanentpen powerpaste advtable advcode editimage advtemplate ai mentions tinycomments tableofcontents footnotes mergetags autocorrect typography inlinecss markdown',
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap ',
            tinycomments_mode: 'embedded',
            tinycomments_author: 'Author name',
            mergetags_list: [
                { value: 'First.Name', title: 'First Name' },
                { value: 'Email', title: 'Email' },
            ],
            ai_request: (request, respondWith) => respondWith.string(() => Promise.reject("See docs to implement AI Assistant")),
            end_container_on_empty_block: true
        });
    </script>
    @{
        <partial name="_ValidationScriptsPartial" />
    }
}